String.split(“”) : 문자열을 배열로 바꾸는 메서드
ex) let str = “Hello”; str.split(“”) === [‘H’, ‘e’, ‘l’, ‘l’, ‘o’]

Array.join(“”): 배열을 문자열로 바꾸는 메서드
ex) let arr = [‘H’, ‘e’, ‘l’, ‘l’, ‘o’] ; arr.join(“”) === “Hello”

Array.map((v) => v): Array의 모든 인덱스에 대해 map() 안의 함수를 실행
ex) let arr = [1 , 2, 3, 4]; arr.map((v) => v * 2) === [2, 4, 6, 8]

Array.filter((v) => 조건문): 조건문에 해당하는 값들을 새로운 배열로 반환
ex) let arr = [1, 2 , 3, 1, 4, 1] ; arr.filter(v => v === 1) === [1, 1, 1]

Array.sort((a, b) => a - b): 배열 안의 값을 오름차순으로 정렬

String.includes(v) : String안에 v가 있는지 true, false로 나타냄

Array.indexOf(v) : Array에서 처음 찾는 v의 index를 반환
Ex) let arr = [1, 4, 2, 5, 2] ; arr.indexOf(2) = 2

Array.reverse(): Array의 배열을 반대로 뒤집음

String.replace() : 어떤 패턴에 일치하는 일부 또는 모든 부분이 교체된 새로운 문자열을 반환

Array.reduce((acc, cur) => acc + cur) :  reduce  메서드는 배열의 각 요소에 대해 주어진 리듀서 (reducer) 함수를 실행하고, 하나의 결과값을 반환 
ex) 위에 적힌 acc + cur은 배열 안의 모든 값을 더해준다.
let arr = [1, 2, 3, 4, 5] ; arr.reduce( (acc, cur) => acc + cur) === 15

map, (filter, find), (splice, slice), findIndex, fill, reduce
forEach, sort 정리하기